---
import Layout from '~/layouts/PageLayout.astro';
import HeroText from '~/components/widgets/HeroText.astro';
import ContactUs from '~/components/widgets/Contact.astro';

const sizesByType = {
  'mesa-espiral': ['21x10cm', '15x15cm', '21x15cm'],
  'mesa-triangular': ['A5', '25x15cm'],
  'pared-espiral': ['24x34cm', '34x24cm'],
  'pared-revista': ['34x48cm'],
};

const quantities = [100, 200, 500, 750, 1000];
const tipoCalendario = Astro.url.searchParams.get('tipo') ?? 'mesa-espiral';
const medidas = sizesByType[tipoCalendario] || [];
const formId = `form-${tipoCalendario}`;
---

<Layout>
  <HeroText title="Solicitar presupuesto para calendarios" />

  <ContactUs
    id={formId}
    title="Solicitar presupuesto"
    subtitle="Completa el formulario para solicitar un presupuesto para nuestros calendarios."
    inputs={[
      {
        type: 'text',
        name: 'name',
        label: 'Nombre',
        required: true,
        
      },
      {
        type: 'email',
        name: 'email',
        label: 'Email',
        required: true,
        
      },
      {
        type: 'tel',
        name: 'telefono',
        label: 'Teléfono',
        required: true,
        
      },
      {
        type: 'text',
        name: 'empresa',
        label: 'Empresa',
        required: false,
        
      },
    ]}
    selects={[
      {
        name: 'medida',
        label: 'Medida del calendario',
        required: true,
        options: medidas.map(medida => ({ value: medida, label: medida })),
      },
      {
        name: 'cantidad',
        label: 'Cantidad',
        required: true,
        options: quantities.map(cantidad => ({ value: cantidad, label: cantidad })),
      },
    ]}
    disclaimer={{
      label:
        'Al enviar este formulario, aceptas nuestra política de privacidad.',
    }}
    buttonText="Enviar"
    description="Nuestro equipo responderá lo antes posible."
    requiredFields={{
      modeloCalendario:'form-mesa-triangular',
      medidas: medidas,
      cantidad: '100',
      name: 'John Doe',
      telefono: '123456789',
      email: 'johndoe@example.com',
    }}

  />

  <!-- Script para manejar el formulario en el lado del cliente -->
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      // Retrasar la búsqueda del formulario en el DOM para asegurarse de que esté completamente cargado
      setTimeout(() => {
        const tipoCalendario = "form-mesa-triangular";
        const formId = `form-${tipoCalendario}`;
        
        console.log('ID del formulario generado:', formId);

        const form = document.querySelector(`#${formId}`);

        // Verificar si el formulario es de tipo HTMLFormElement
        if (form instanceof HTMLFormElement) {
          // Añadir eventos focus y blur a cada input
          form.querySelectorAll('input').forEach(input => {
            const icon = input.placeholder;
            input.addEventListener('focus', () => {
              input.placeholder = '';
            });
            input.addEventListener('blur', () => {
              input.placeholder = icon;
            });
          });

          form.addEventListener('submit', async (event) => {
            event.preventDefault();

            const formData = new FormData(form);
            const jsonData = Object.fromEntries(formData.entries());

            try {
              const response = await fetch('/api/send-emails', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify(jsonData),
              });

              const result = await response.json();
              if (response.ok) {
                alert('Correo enviado correctamente');
              } else {
                alert('Error: ' + result.message);
              }
            } catch (error) {
              console.error('Error en la solicitud:', error);
              alert('Error en el envío del formulario.');
            }
          });
        } else {
          console.error('Formulario no encontrado o no es de tipo HTMLFormElement:', formId);
        }
      }, 500); // Retrasar 500 ms para asegurarse de que el formulario esté cargado
    });
  </script>

</Layout>
