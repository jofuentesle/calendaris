---
import WidgetWrapper from '../ui/WidgetWrapper.astro';
import type { CallToAction, Widget } from '~/types';
import Headline from '~/components/ui/Headline.astro';
import Button from '~/components/ui/Button.astro';
import DynamicForm from './DynamicForm.astro';

interface Props extends Widget {
  title?: string;
  subtitle?: string;
  tagline?: string;
  callToAction?: CallToAction;
  actions?: string | CallToAction[];
}

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline = await Astro.slots.render('tagline'),
  actions = await Astro.slots.render('actions'),
  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-6xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <div
    class="max-w-3xl mx-auto text-center p-6 rounded-md shadow-xl dark:shadow-none dark:border dark:border-slate-600"
  >
    <!-- Headline -->
    <Headline
      title={title}
      subtitle={subtitle}
      tagline={tagline}
      classes={{
        container: 'mb-0 md:mb-0',
        title: 'text-4xl md:text-4xl font-bold tracking-tighter mb-4 font-heading',
        subtitle: 'text-xl text-muted dark:text-slate-400',
      }}
    />

    <!-- Formulario Dinámico -->
    <div class="mt-8 w-full">
      <DynamicForm />
    </div>

    <!-- Botón de Envío del Formulario -->
    <div class="max-w-xs sm:max-w-md m-auto flex justify-center gap-4 mt-6">
      <!-- El botón es el botón de CallToAction -->
      {Array.isArray(actions) ? (
        actions.map((action) => (
          <div class="flex w-full sm:w-auto">
            <Button {...(action || {})} class="w-full sm:mb-0" form="calendar-form" />
          </div>
        ))
      ) : (
        <Fragment set:html={actions} />
      )}
    </div>
  </div>
</WidgetWrapper>
